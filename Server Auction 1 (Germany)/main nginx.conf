user www-data;
worker_processes  auto;
pid        /var/run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections  2048;
    # multi_accept on;
}

http {
    	##
	# Basic Settings
	##
	
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 15;
	types_hash_max_size 4096;
	server_tokens off;
	proxy_hide_header "server";
    	proxy_hide_header "x-powered-by";
	
	#server_names_hash_bucket_size 64;
	#server_name_in_redirect off;

	##
	# SSL Settings
	##

	ssl_client_certificate /etc/ssl/certs/cloudflare.pem; # Authenticated Origin Pulls (Cloudflare)
   	ssl_verify_client on; # Authenticated Origin Pulls (Cloudflare)
	ssl_protocols TLSv1.2 TLSv1.3; # Most secure
	ssl_prefer_server_ciphers off; # Don't touch

	##
	# Logging Settings
	##

	access_log /dev/null; # disables all logs for privacy, enable if you need to block a ip of some short
	error_log /dev/null; # disables all logs for privacy, enable if you need to disanoise a error
	
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    ##
	# Gzip Settings
	##
	# HTTP compression makes the secure connection with your webserver vulnerable for the BREACH attack. However HTTP compression is commonly used to make more efficient use of available bandwidth. Consider the trade-offs involved with HTTP compression. If you choose to use HTTP compression, verify if it is possible to mitigate related attacks at the application level. An example of such a measure is limiting the extent to which an attacker can influence the response of a server. This subtest checks if the web server on root directory level supports HTTP compression. However it does not check additional website sources like images and scripts.
	
	#gzip on;

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    ##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	#include /etc/nginx/sites-enabled/*;
}

#mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
# 
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
# 
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
# 
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
#}
